"use strict";(()=>{var t={};t.id=0,t.ids=[0],t.modules={145:t=>{t.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(t,e)=>{Object.defineProperty(e,"l",{enumerable:!0,get:function(){return function t(e,o){return o in e?e[o]:"then"in e&&"function"==typeof e.then?e.then(e=>t(e,o)):"function"==typeof e&&"default"===o?e:void 0}}})},4492:(t,e,o)=>{o.r(e),o.d(e,{config:()=>d,default:()=>c,routeModule:()=>p});var a={};o.r(a),o.d(a,{default:()=>l});var i=o(1802),r=o(7153),s=o(6249);let n="zGrtVQbRA6bHEbuehwVxooi0z4OD2xvi";async function l(t,e){if("GET"!==t.method)return e.status(405).json({error:"Method not allowed"});let{ticker:o,expiration:a}=t.query;if(!o||!a)return e.status(400).json({error:"Ticker and expiration date are required"});if(!n)return e.status(500).json({error:"Polygon API key not configured"});try{let t=await fetch(`https://api.polygon.io/v2/aggs/ticker/${o}/prev?adjusted=true&apiKey=${n}`);if(!t.ok)throw Error("Failed to fetch stock price");let i=await t.json(),r=i.results&&i.results.length>0?i.results[0].c:0;if(!r)throw Error("Stock price not available");let s=await fetch(`https://api.polygon.io/v3/reference/options/contracts?underlying_ticker=${o}&limit=1000&apiKey=${n}`);if(!s.ok)throw Error("Failed to fetch options contracts");let l=(await s.json()).results||[];if(0===l.length)throw Error("No options contracts found for this ticker");let c=new Date(a),d=null,p=1/0;for(let t of l)if(t.expiration_date){let e=new Date(t.expiration_date),o=Math.abs(e-c);o<p&&(p=o,d=t.expiration_date)}if(!d)throw Error("No valid expiration dates found for this ticker");let u=l.filter(t=>t.expiration_date===d&&"call"===t.contract_type),f=l.filter(t=>t.expiration_date===d&&"put"===t.contract_type);if(0===u.length||0===f.length)throw Error(`No options contracts found for ${o} expiring ${d}`);let h=null,g=null,k=1/0;for(let t of u)for(let e of f)if(t.strike_price===e.strike_price){let o=Math.abs(t.strike_price-r);o<k&&(k=o,h=t,g=e)}if(!h||!g)throw Error("No matching call and put contracts found for this expiration");let y=new Date,$=null;for(let t=1;t<=7;t++){let e=new Date(y);e.setDate(e.getDate()-t);let a=e.getDay();if(a>=1&&a<=5){let t=e.toISOString().slice(0,10);try{let e=await fetch(`https://api.polygon.io/v2/aggs/ticker/${o}/range/1/day/${t}/${t}?adjusted=true&apiKey=${n}`);if(e.ok){let o=await e.json();if(o.results&&o.results.length>0){$=t;break}}}catch(t){continue}}}if(!$)throw Error("Could not find recent trading data");let w=0,m=0;try{let t=await fetch(`https://api.polygon.io/v2/aggs/ticker/${h.ticker}/prev?adjusted=true&apiKey=${n}`);if(t.ok){let e=await t.json();e.results&&e.results.length>0&&(w=e.results[0].c||0)}}catch(t){console.log("Call options data fetch failed:",t.message)}try{let t=await fetch(`https://api.polygon.io/v2/aggs/ticker/${g.ticker}/prev?adjusted=true&apiKey=${n}`);if(t.ok){let e=await t.json();e.results&&e.results.length>0&&(m=e.results[0].c||0)}}catch(t){console.log("Put options data fetch failed:",t.message)}if(0===w||0===m){try{let t=await fetch(`https://api.polygon.io/v1/open-close/${h.ticker}/${$}?adjusted=true&apiKey=${n}`);if(t.ok){let e=await t.json();0===w&&(w=e.close||0)}}catch(t){console.log("Call options open-close fetch failed:",t.message)}try{let t=await fetch(`https://api.polygon.io/v1/open-close/${g.ticker}/${$}?adjusted=true&apiKey=${n}`);if(t.ok){let e=await t.json();0===m&&(m=e.close||0)}}catch(t){console.log("Put options open-close fetch failed:",t.message)}}if(0===w||0===m){try{let t=await fetch(`https://api.polygon.io/v2/aggs/ticker/${h.ticker}/range/1/day/${$}/${$}?adjusted=true&apiKey=${n}`);if(t.ok){let e=await t.json();e.results&&e.results.length>0&&0===w&&(w=e.results[0].c||0)}}catch(t){console.log("Call options range fetch failed:",t.message)}try{let t=await fetch(`https://api.polygon.io/v2/aggs/ticker/${g.ticker}/range/1/day/${$}/${$}?adjusted=true&apiKey=${n}`);if(t.ok){let e=await t.json();e.results&&e.results.length>0&&0===m&&(m=e.results[0].c||0)}}catch(t){console.log("Put options range fetch failed:",t.message)}}let P=h.strike_price,v=w+m,x=new Date(d),j=new Date($),E=Math.ceil((x-j)/864e5);if(0===v){console.log("No real options pricing data available, estimating based on stock price and time to expiration");let t=E/365,e=r*Math.min(.4,Math.max(.1,.2+.1*t))*Math.sqrt(t)*.8;w=e/2,m=e/2,v=e,console.log(`Estimated premium: $${v.toFixed(2)} (Call: $${w.toFixed(2)}, Put: $${m.toFixed(2)})`)}else console.log(`Real options pricing data found - Call: $${w}, Put: $${m}, Total: $${v}`);return e.status(200).json({ticker:o,expiration:d,requestedExpiration:a,executionDate:$,currentPrice:r,strikePrice:P,callPrice:w,putPrice:m,totalPremium:v,callTicker:h.ticker,putTicker:g.ticker,daysToExpiration:E,isEstimated:v>0&&(0===w||0===m)})}catch(o){console.error("Error fetching straddle options:",o);let t="Failed to fetch straddle options";return o.message.includes("No options contracts found")?t="No options contracts found for this ticker. Please verify the ticker symbol.":o.message.includes("No valid expiration dates")?t="No valid expiration dates found. Please try a different date.":o.message.includes("Stock price not available")?t="Unable to fetch current stock price. Please verify the ticker symbol.":o.message.includes("No matching call and put contracts")&&(t="No matching call and put contracts found for this expiration date."),e.status(500).json({error:t,details:o.message})}}let c=(0,s.l)(a,"default"),d=(0,s.l)(a,"config"),p=new i.PagesAPIRouteModule({definition:{kind:r.x.PAGES_API,page:"/api/straddle-options",pathname:"/api/straddle-options",bundlePath:"",filename:""},userland:a})},7153:(t,e)=>{var o;Object.defineProperty(e,"x",{enumerable:!0,get:function(){return o}}),function(t){t.PAGES="PAGES",t.PAGES_API="PAGES_API",t.APP_PAGE="APP_PAGE",t.APP_ROUTE="APP_ROUTE"}(o||(o={}))},1802:(t,e,o)=>{t.exports=o(145)}};var e=require("../../webpack-api-runtime.js");e.C(t);var o=e(e.s=4492);module.exports=o})();