"use strict";(()=>{var e={};e.id=0,e.ids=[0],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,o){return o in t?t[o]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,o)):"function"==typeof t&&"default"===o?t:void 0}}})},4492:(e,t,o)=>{o.r(t),o.d(t,{config:()=>d,default:()=>c,routeModule:()=>u});var r={};o.r(r),o.d(r,{default:()=>s});var n=o(1802),i=o(7153),a=o(6249);let l="zGrtVQbRA6bHEbuehwVxooi0z4OD2xvi";async function s(e,t){if("GET"!==e.method)return t.status(405).json({error:"Method not allowed"});let{ticker:o,expiration:r}=e.query;if(!o||!r)return t.status(400).json({error:"Ticker and expiration date are required"});if(!l)return t.status(500).json({error:"Polygon API key not configured"});try{let e=await fetch(`https://api.polygon.io/v2/aggs/ticker/${o}/prev?adjusted=true&apiKey=${l}`);if(!e.ok)throw Error("Failed to fetch stock price");let n=await e.json();console.log("Stock data response:",JSON.stringify(n,null,2));let i=n.results&&n.results.length>0?n.results[0].c:0;if(console.log("Extracted current price:",i),!i)return console.error("No stock price found in response:",n),t.status(404).json({error:"Stock price not found",response:n});let a=5*Math.round(i/5),s=await fetch(`https://api.polygon.io/v3/reference/options/contracts?underlying_ticker=${o}&limit=1000&apiKey=${l}`);if(!s.ok)throw Error("Failed to fetch options contracts");let c=(await s.json()).results||[];if(0===c.length)throw Error("No options contracts found for this ticker");console.log(`Found ${c.length} total contracts for ${o}`),console.log("Available expiration dates:",[...new Set(c.map(e=>e.expiration_date))].slice(0,10));let d=new Date(r),u=null,p=1/0;for(let e of(console.log(`Looking for expiration closest to: ${r}`),console.log("Available expirations:",c.map(e=>e.expiration_date).filter(Boolean).slice(0,10)),c))if(e.expiration_date){let t=new Date(e.expiration_date),o=Math.abs(t-d);o<p&&(p=o,u=e.expiration_date)}if(!u)throw Error("No valid expiration dates found for this ticker");console.log(`Requested expiration: ${r}, Using closest available: ${u}`),console.log(`Current stock price: ${i}, Target ATM strike: ${a}`);let f=c.filter(e=>e.expiration_date===u&&"call"===e.contract_type),g=c.filter(e=>e.expiration_date===u&&"put"===e.contract_type);if(console.log(`Found ${f.length} call contracts and ${g.length} put contracts for ${u}`),console.log(`Found ${g.length} put contracts for ${u}`),0===f.length||0===g.length)throw Error(`No options contracts found for ${o} expiring ${u}`);console.log(`Found ${f.length} call contracts and ${g.length} put contracts for ${u}`),console.log("Available strikes:",[...new Set(f.map(e=>e.strike_price))].slice(0,10)),console.log(`Current price: ${i}, Target ATM strike: ${a}`);let h=null,$=null,k=1/0;for(let e of(console.log("Looking for matching call/put contracts at same strike price..."),f))for(let t of g)if(e.strike_price===t.strike_price){let o=Math.abs(e.strike_price-i);console.log(`Found matching strike: ${e.strike_price} (diff from current: ${o})`),o<k&&(k=o,h=e,$=t,console.log(`New best match - Strike: ${e.strike_price}, Call: ${e.ticker}, Put: ${t.ticker}`))}if(!h||!$)throw console.error("Contract matching failed:"),console.error("- Available call strikes:",f.map(e=>e.strike_price).slice(0,10)),console.error("- Available put strikes:",g.map(e=>e.strike_price).slice(0,10)),console.error("- Current price:",i),console.error("- Target ATM strike:",a),Error("No matching call and put contracts found for this expiration");let y=new Date,w=null;for(let e=1;e<=7;e++){let t=new Date(y);t.setDate(t.getDate()-e);let r=t.getDay();if(r>=1&&r<=5){let e=t.toISOString().slice(0,10);console.log(`Testing potential trading day: ${e} (${["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][r]})`);try{let t=await fetch(`https://api.polygon.io/v2/aggs/ticker/${o}/range/1/day/${e}/${e}?adjusted=true&apiKey=${l}`);if(t.ok){let o=await t.json();if(o.results&&o.results.length>0){w=e,console.log(`Found valid trading day: ${w}`);break}}}catch(t){console.log(`No stock data for ${e}, trying next day`);continue}}}if(!w)throw Error("Could not find recent trading data");console.log(`Using last trading day: ${w} as execution date`),console.log(`Fetching options data for call: ${h.ticker} and put: ${$.ticker} on date: ${w}`);let P=0,x=0;try{let e=await fetch(`https://api.polygon.io/v1/open-close/${h.ticker}/${w}?adjusted=true&apiKey=${l}`);if(e.ok){let t=await e.json();P=t.close||0,console.log("Call options data (open/close):",t)}else console.warn(`Call options request failed: ${e.status} - ${e.statusText}`),console.warn(`Tried to fetch: /v1/open-close/${h.ticker}/${w}`)}catch(e){console.log("Call options data fetch failed:",e.message)}try{let e=await fetch(`https://api.polygon.io/v1/open-close/${$.ticker}/${w}?adjusted=true&apiKey=${l}`);if(e.ok){let t=await e.json();x=t.close||0,console.log("Put options data (open/close):",t)}else console.warn(`Put options request failed: ${e.status} - ${e.statusText}`),console.warn(`Tried to fetch: /v1/open-close/${$.ticker}/${w}`)}catch(e){console.log("Put options data fetch failed:",e.message)}let m=h.strike_price,v=P+x;return console.log(`Final pricing - Call: ${P}, Put: ${x}, Total: ${v}`),console.log(`Strike: ${m}, Current Price: ${i}`),(0===P||0===x)&&(console.warn(`Missing pricing data - Call: ${P}, Put: ${x}`),console.warn(`This might be due to no trading data available for ${w}`)),t.status(200).json({ticker:o,expiration:u,requestedExpiration:r,executionDate:w,currentPrice:i,strikePrice:m,callPrice:P,putPrice:x,totalPremium:P+x,callTicker:h.ticker,putTicker:$.ticker})}catch(e){return console.error("Error fetching straddle options:",e),t.status(500).json({error:"Failed to fetch straddle options",details:e.message})}}let c=(0,a.l)(r,"default"),d=(0,a.l)(r,"config"),u=new n.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/straddle-options",pathname:"/api/straddle-options",bundlePath:"",filename:""},userland:r})},7153:(e,t)=>{var o;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return o}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(o||(o={}))},1802:(e,t,o)=>{e.exports=o(145)}};var t=require("../../webpack-api-runtime.js");t.C(e);var o=t(t.s=4492);module.exports=o})();